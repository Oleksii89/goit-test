{"version":3,"file":"static/js/53.43f99bc7.chunk.js","mappings":"8RAEaA,EAAiBC,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,4HAQ1BC,EAAiBH,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,6N,SC+CvC,EAjDiB,WACf,IAAQG,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAAoCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAzCI,EAAUF,EAAA,GAAEG,EAAaH,EAAA,GAChCI,GAA0BL,EAAAA,EAAAA,UAAS,MAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAjCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAAkCT,EAAAA,EAAAA,WAAS,GAAMU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAqB9B,OAnBAG,EAAAA,EAAAA,YAAU,WACR,GAAKhB,EAAL,CAEA,IAAMiB,EAAc,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEA,OAFAF,EAAAC,KAAA,EAEnBX,GAAa,GAAMU,EAAAE,KAAA,GAEIC,EAAAA,EAAAA,IAAa5B,GAAS,KAAD,EAAtCuB,EAAQE,EAAAI,KAEdtB,EAAcgB,GAAUE,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAExBd,EAASc,EAAAK,GAAMC,SAAS,QAEJ,OAFIN,EAAAC,KAAA,GAExBX,GAAa,GAAOU,EAAAO,OAAA,6BAAAP,EAAAQ,OAAA,GAAAX,EAAA,wBAEvB,kBAZmB,OAAAJ,EAAAgB,MAAA,KAAAC,UAAA,KAapBlB,GAfoB,CAgBtB,GAAG,CAACjB,KAGFoC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,CACGvB,IAAawB,EAAAA,EAAAA,KAACC,EAAAA,EAAM,IACpB7B,IAAS4B,EAAAA,EAAAA,KAAA,KAAAD,SAAG,kBACG,OAAf/B,IACCgC,EAAAA,EAAAA,KAAC5C,EAAc,CAAA2C,SACZ/B,EAAWkC,KAAI,SAAAC,GAAA,IAAGC,EAAED,EAAFC,GAAIC,EAAYF,EAAZE,aAAcC,EAAIH,EAAJG,KAAMC,EAASJ,EAATI,UAAS,OAClDT,EAAAA,EAAAA,MAACtC,EAAc,CAAAuC,SAAA,EACbC,EAAAA,EAAAA,KAAA,OACEQ,IAAG,GAAAC,OACDJ,EAAeK,EAAAA,EAAkBL,EAAeM,EAAAA,GAElDC,IAAI,YAENZ,EAAAA,EAAAA,KAAA,KAAAD,SAAIO,KACJR,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,cAAYQ,OARIH,EASJ,QAM7B,C","sources":["pages/CastPage/CastPage.styled.js","pages/CastPage/CastPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledCastList = styled.ul`\n  margin-top: 10px;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 12px;\n  list-style: none;\n  padding-left: 0;\n`;\nexport const StyledListItem = styled.li`\n  width: 135px;\n  font-size: 12px;\n  padding: 6px;\n  border-radius: 14px;\n  :not(:last-child) {\n    margin-bottom: 6px;\n  }\n\n  img {\n    width: 130px;\n    height: 150px;\n    border-radius: 8px;\n  }\n`;\n","import { Loader } from 'components/Loader/Loader';\nimport { BASE_POSTER_URL, DEFAULTIMG } from 'helper/helper';\nimport React, { useState } from 'react';\nimport { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCastMovie } from 'services/api';\nimport { StyledCastList, StyledListItem } from './CastPage.styled';\n\nconst CastPage = () => {\n  const { movieId } = useParams();\n  const [movieCasts, setMovieCasts] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    if (!movieId) return;\n\n    const fetchCastMovie = async () => {\n      try {\n        setIsLoading(true);\n\n        const castData = await getCastMovie(movieId);\n\n        setMovieCasts(castData);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchCastMovie();\n  }, [movieId]);\n\n  return (\n    <div>\n      {isLoading && <Loader />}\n      {error && <p>error.message</p>}\n      {movieCasts !== null && (\n        <StyledCastList>\n          {movieCasts.map(({ id, profile_path, name, character }) => (\n            <StyledListItem key={id}>\n              <img\n                src={`${\n                  profile_path ? BASE_POSTER_URL + profile_path : DEFAULTIMG\n                }`}\n                alt=\"poster\"\n              />\n              <b>{name}</b>\n              <p>Character: {character}</p>\n            </StyledListItem>\n          ))}\n        </StyledCastList>\n      )}\n    </div>\n  );\n};\n\nexport default CastPage;\n"],"names":["StyledCastList","styled","_templateObject","_taggedTemplateLiteral","StyledListItem","_templateObject2","movieId","useParams","_useState","useState","_useState2","_slicedToArray","movieCasts","setMovieCasts","_useState3","_useState4","error","setError","_useState5","_useState6","isLoading","setIsLoading","useEffect","fetchCastMovie","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","castData","wrap","_context","prev","next","getCastMovie","sent","t0","message","finish","stop","apply","arguments","_jsxs","children","_jsx","Loader","map","_ref2","id","profile_path","name","character","src","concat","BASE_POSTER_URL","DEFAULTIMG","alt"],"sourceRoot":""}